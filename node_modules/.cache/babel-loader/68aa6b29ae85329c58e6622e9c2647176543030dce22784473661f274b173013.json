{"ast":null,"code":"var _jsxFileName = \"/Users/amychan/nextai/src/components/PdfUploader.js\";\nimport React from \"react\";\nimport axios from \"axios\"; // Import axios for HTTP requests\nimport { InboxOutlined } from \"@ant-design/icons\";\nimport { message, Upload } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Dragger\n} = Upload;\nconst DOMAIN = \"http://localhost:5001\";\nconst uploadToBackend = async file => {\n  const formData = new FormData();\n  formData.append(\"file\", file);\n  try {\n    const response = await axios.post(`${DOMAIN}/upload`, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    return response;\n  } catch (error) {\n    console.error(\"Error uploading file: \", error);\n    return null;\n  }\n};\nconst attributes = {\n  name: \"file\",\n  multiple: true,\n  customRequest: async ({\n    file,\n    onSuccess,\n    onError\n  }) => {\n    const response = await uploadToBackend(file);\n    if (response && response.status === 200) {\n      // Handle success\n      onSuccess(response.data);\n    } else {\n      // Handle error\n      onError(new Error(\"Upload failed\"));\n    }\n  },\n  onChange(info) {\n    const {\n      status\n    } = info.file;\n    if (status !== \"uploading\") {\n      console.log(info.file, info.fileList);\n    }\n    if (status === \"done\") {\n      message.success(`${info.file.name} file uploaded successfully.`);\n    } else if (status === \"error\") {\n      message.error(`${info.file.name} file upload failed.`);\n    }\n  },\n  onDrop(e) {\n    console.log(\"Dropped files\", e.dataTransfer.files);\n  }\n};\nconst PdfUploader = () => {\n  return /*#__PURE__*/_jsxDEV(Dragger, {\n    ...attributes,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"ant-upload-drag-icon\",\n      children: /*#__PURE__*/_jsxDEV(InboxOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"ant-upload-text\",\n      children: \"Click or drag file to this area to upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"ant-upload-hint\",\n      children: \"Support for a single or bulk upload. Strictly prohibited from uploading company data or other banned files.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_c = PdfUploader;\nexport default PdfUploader;\nvar _c;\n$RefreshReg$(_c, \"PdfUploader\");","map":{"version":3,"names":["React","axios","InboxOutlined","message","Upload","jsxDEV","_jsxDEV","Dragger","DOMAIN","uploadToBackend","file","formData","FormData","append","response","post","headers","error","console","attributes","name","multiple","customRequest","onSuccess","onError","status","data","Error","onChange","info","log","fileList","success","onDrop","e","dataTransfer","files","PdfUploader","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/amychan/nextai/src/components/PdfUploader.js"],"sourcesContent":["import React from \"react\";\nimport axios from \"axios\"; // Import axios for HTTP requests\nimport { InboxOutlined } from \"@ant-design/icons\";\nimport { message, Upload } from \"antd\";\n\nconst { Dragger } = Upload;\n\nconst DOMAIN = \"http://localhost:5001\";\n\nconst uploadToBackend = async (file) => {\n  const formData = new FormData();\n  formData.append(\"file\", file);\n  try {\n    const response = await axios.post(`${DOMAIN}/upload`, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    });\n    return response;\n  } catch (error) {\n    console.error(\"Error uploading file: \", error);\n    return null;\n  }\n};\n\nconst attributes = {\n  name: \"file\",\n  multiple: true,\n  customRequest: async ({ file, onSuccess, onError }) => {\n    const response = await uploadToBackend(file);\n    if (response && response.status === 200) {\n      // Handle success\n      onSuccess(response.data);\n    } else {\n      // Handle error\n      onError(new Error(\"Upload failed\"));\n    }\n  },\n  onChange(info) {\n    const { status } = info.file;\n    if (status !== \"uploading\") {\n      console.log(info.file, info.fileList);\n    }\n    if (status === \"done\") {\n      message.success(`${info.file.name} file uploaded successfully.`);\n    } else if (status === \"error\") {\n      message.error(`${info.file.name} file upload failed.`);\n    }\n  },\n  onDrop(e) {\n    console.log(\"Dropped files\", e.dataTransfer.files);\n  },\n};\n\nconst PdfUploader = () => {\n  return (\n    <Dragger {...attributes}>\n      <p className=\"ant-upload-drag-icon\">\n        <InboxOutlined />\n      </p>\n      <p className=\"ant-upload-text\">\n        Click or drag file to this area to upload\n      </p>\n      <p className=\"ant-upload-hint\">\n        Support for a single or bulk upload. Strictly prohibited from uploading\n        company data or other banned files.\n      </p>\n    </Dragger>\n  );\n};\n\nexport default PdfUploader;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}