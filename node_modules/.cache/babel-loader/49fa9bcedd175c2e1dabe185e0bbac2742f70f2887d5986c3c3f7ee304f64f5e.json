{"ast":null,"code":"var _jsxFileName = \"/Users/amychan/nextai/src/components/ChatComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Input } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Search\n} = Input; //? JSX\n\nconst DOMAIN = \"http://localhost:5001\";\nconst searchContainer = {\n  display: \"flex\",\n  justifyContent: \"center\"\n};\nconst ChatComponent = props => {\n  _s();\n  const {\n    handleResp,\n    isLoading,\n    setIsLoading\n  } = props;\n  // Define a state variable to keep track of the search value\n  const [searchValue, setSearchValue] = useState(\"\");\n  const onSearch = async question => {\n    // Clear the search input\n    setSearchValue(\"\");\n    setIsLoading(true);\n    try {\n      const response = await axios.get(`${DOMAIN}/chat`, {\n        params: {\n          question\n        }\n      });\n      handleResp(question, response.data);\n    } catch (error) {\n      console.error(`Error: ${error}`);\n      handleResp(question, error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleChange = e => {\n    // Update searchValue state when the user types in the input box\n    setSearchValue(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: searchContainer,\n    children: /*#__PURE__*/_jsxDEV(Search, {\n      placeholder: \"input search text\",\n      enterButton: \"Ask\",\n      size: \"large\",\n      onSearch: onSearch,\n      loading: isLoading,\n      value: searchValue // Control the value      ?\n      ,\n      onChange: handleChange // Update the value when changed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatComponent, \"F12Wsjogj0HVecr0VGWn/MCEg+A=\");\n_c = ChatComponent;\nexport default ChatComponent;\nvar _c;\n$RefreshReg$(_c, \"ChatComponent\");","map":{"version":3,"names":["React","useState","axios","Input","jsxDEV","_jsxDEV","Search","DOMAIN","searchContainer","display","justifyContent","ChatComponent","props","_s","handleResp","isLoading","setIsLoading","searchValue","setSearchValue","onSearch","question","response","get","params","data","error","console","handleChange","e","target","value","style","children","placeholder","enterButton","size","loading","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/amychan/nextai/src/components/ChatComponent.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Input } from \"antd\";\n\nconst { Search } = Input;      //? JSX\n\nconst DOMAIN = \"http://localhost:5001\";\n\nconst searchContainer = {\n  display: \"flex\",\n  justifyContent: \"center\",\n};\n\nconst ChatComponent = (props) => {\n  const { handleResp, isLoading, setIsLoading } = props;\n  // Define a state variable to keep track of the search value\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  const onSearch = async (question) => {\n    // Clear the search input\n    setSearchValue(\"\");\n    setIsLoading(true);\n\n    try {\n      const response = await axios.get(`${DOMAIN}/chat`, {\n        params: {\n          question,\n        },\n      });\n      handleResp(question, response.data);\n    } catch (error) {\n      console.error(`Error: ${error}`);\n      handleResp(question, error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleChange = (e) => {\n    // Update searchValue state when the user types in the input box\n    setSearchValue(e.target.value);\n  };\n\n  return (\n    <div style={searchContainer}>\n      <Search\n        placeholder=\"input search text\"\n        enterButton=\"Ask\"\n        size=\"large\"\n        onSearch={onSearch}\n        loading={isLoading}\n        value={searchValue} // Control the value      ?\n        onChange={handleChange} // Update the value when changed\n      />\n    </div>\n  );\n};\n\nexport default ChatComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAM;EAAEC;AAAO,CAAC,GAAGH,KAAK,CAAC,CAAM;;AAE/B,MAAMI,MAAM,GAAG,uBAAuB;AAEtC,MAAMC,eAAe,GAAG;EACtBC,OAAO,EAAE,MAAM;EACfC,cAAc,EAAE;AAClB,CAAC;AAED,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC/B,MAAM;IAAEC,UAAU;IAAEC,SAAS;IAAEC;EAAa,CAAC,GAAGJ,KAAK;EACrD;EACA,MAAM,CAACK,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMkB,QAAQ,GAAG,MAAOC,QAAQ,IAAK;IACnC;IACAF,cAAc,CAAC,EAAE,CAAC;IAClBF,YAAY,CAAC,IAAI,CAAC;IAElB,IAAI;MACF,MAAMK,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAAC,GAAGf,MAAM,OAAO,EAAE;QACjDgB,MAAM,EAAE;UACNH;QACF;MACF,CAAC,CAAC;MACFN,UAAU,CAACM,QAAQ,EAAEC,QAAQ,CAACG,IAAI,CAAC;IACrC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,UAAUA,KAAK,EAAE,CAAC;MAChCX,UAAU,CAACM,QAAQ,EAAEK,KAAK,CAAC;IAC7B,CAAC,SAAS;MACRT,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMW,YAAY,GAAIC,CAAC,IAAK;IAC1B;IACAV,cAAc,CAACU,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EAED,oBACEzB,OAAA;IAAK0B,KAAK,EAAEvB,eAAgB;IAAAwB,QAAA,eAC1B3B,OAAA,CAACC,MAAM;MACL2B,WAAW,EAAC,mBAAmB;MAC/BC,WAAW,EAAC,KAAK;MACjBC,IAAI,EAAC,OAAO;MACZhB,QAAQ,EAAEA,QAAS;MACnBiB,OAAO,EAAErB,SAAU;MACnBe,KAAK,EAAEb,WAAY,CAAC;MAAA;MACpBoB,QAAQ,EAAEV,YAAa,CAAC;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC5B,EAAA,CA3CIF,aAAa;AAAA+B,EAAA,GAAb/B,aAAa;AA6CnB,eAAeA,aAAa;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}